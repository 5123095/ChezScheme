#!/bin/bash

if [ -z "${SCHEME}" ]; then
  echo "please set SCHEME environment variable"
  exit 1
fi

if [ -z "${SCHEMEHEAPDIRS}" ]; then
  echo "please set SCHEMEHEAPDIRS environment variable"
  exit 1
fi

rm -f lib1/*.{so,wpo}
rm -f lib2/*.{so,wpo}
rm -f prog/*.{so,wpo}

cat > setup.ss<<EOF
(import-notify (and (getenv "VERBOSE") #t))
(generate-wpo-files #t)
(compile-imported-libraries #t)
(define disallow-wpo '())
(library-search-handler
 (let ([default-library-search (library-search-handler)])
   (lambda (who path dir* all-ext*)
     (cond
      [(ormap (lambda (p) (equal? (cdr p) ".wpo")) all-ext*)
       (if (member path disallow-wpo)
           (values #f #f #f)
           (default-library-search who path dir* all-ext*))]
      [(guard (c [else #f]) (library-object-filename path)) =>
       (lambda (obj-file)
         (values #f obj-file (file-exists? obj-file)))]
      [else (default-library-search who path dir* all-ext*)]))))
EOF

"${SCHEME}" setup.ss <<EOF
(transcript-on "lib1/build.log")
(compile-library "lib1/combined.ss" "lib1/combined.so")
(let ([op (and (getenv "VERBOSE") (current-output-port))])
  (parameterize ([expand-output op]
                 [expand/optimize-output op])
    (compile-whole-library "lib1/combined.wpo" "lib1/combined.library")))
EOF
rm -f lib1/*.so lib1/*.wpo

"${SCHEME}" setup.ss <<EOF
(transcript-on "lib2/build.log")
(load "lib1/combined.library")
(set! disallow-wpo (library-list))
(compile-library "lib2/combined.ss" "lib2/combined.so")
(let ([op (and (getenv "VERBOSE") (current-output-port))])
  (parameterize ([expand-output op]
                 [expand/optimize-output op])
    (compile-whole-library "lib2/combined.wpo" "lib2/combined.library")))
EOF
rm -f lib2/*.so lib2/*.wpo

"${SCHEME}" setup.ss <<EOF
(transcript-on "prog/build.log")
(load "lib1/combined.library")
(load "lib2/combined.library")
(set! disallow-wpo (library-list))
(compile-program "prog/main.ss" "prog/main.so")
(let ([op (and (getenv "VERBOSE") (current-output-port))])
  (parameterize ([expand-output op]
                 [expand/optimize-output op])
    (compile-whole-program "prog/main.wpo" "prog/main.program")))
EOF
rm -f prog/*.so prog/*.wpo

cat lib1/combined.library lib2/combined.library prog/main.program > main
# "${SCHEME}" setup.ss <<EOF
# (load-program "main")
# EOF
"${SCHEME}" --program main
